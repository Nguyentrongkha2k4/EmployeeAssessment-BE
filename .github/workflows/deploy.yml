name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            submodules: false
        - name: Setup JDK 17
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '21'

      # Bước 2: Build Spring Boot (nếu dùng Maven)
        - name: Build Spring Boot Application
          run: mvn clean package -DskipTests
        - name: Login Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
  
        # Bước 3: Thiết lập Docker Buildx
        - name: Setup Docker Buildx
          uses: docker/setup-buildx-action@v2
          id: buildx
  
        # Bước 4: Build và đẩy Docker image hỗ trợ ARM64
        - name: Build and push Docker image for ARM64
          uses: docker/build-push-action@v6
          id: docker_build
          with:
            context: ./          # Đặt build context là thư mục src
            file: ./Dockerfile   # Đường dẫn đến tệp Dockerfile bên trong thư mục src
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/employeeassessment:latest
        # Step 7: Install Koyeb CLI from GitHub Releases
        - name: Install Koyeb CLI from GitHub Releases
          run: |
            curl -L https://github.com/koyeb/koyeb-cli/releases/latest/download/koyeb-linux-amd64 -o koyeb
            chmod +x koyeb
            sudo mv koyeb /usr/local/bin/
  
        # Step 8: Verify Koyeb installation
        - name: Verify Koyeb installation
          run: koyeb --version
  
        # Step 9: Authenticate Koyeb CLI using API key
        - name: Authenticate Koyeb CLI
          run: sudo koyeb auth login --api-key "${{ secrets.KOYEB_API_KEY }}"
  
        # Step 10: Redeploy Koyeb service
        - name: Redeploy Koyeb Service
          run: koyeb service redeploy temporary-antonie/employeeassessment
      # - name: 📥 Checkout code
      #   uses: actions/checkout@v3

      # - name: ☕ Set up Java
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '21'
      #     distribution: 'temurin'

      # - name: 🛠️ Build with Maven
      #   run: mvn clean package -DskipTests

      # - name: 🔐 Set up SSH and Known Hosts
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y rsync
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
      #     chmod 600 ~/.ssh/id_ed25519
      #     ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # - name: 📤 Copy JAR to EC2 using rsync
      #   run: |
      #     rsync -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
      #       -avz --no-motd --timeout=30 target/*.jar \
      #       ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/404BrainNotFound/app.jar

      # - name: 🚀 Restart Spring Boot App on EC2
      #   run: |
      #     ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
      #       pkill -f 'java -jar' || true
      #       nohup java -jar /home/${{ secrets.EC2_USER }}/404BrainNotFound/app.jar > /home/${{ secrets.EC2_USER }}/404BrainNotFound/app.log 2>&1 &
      #     EOF
